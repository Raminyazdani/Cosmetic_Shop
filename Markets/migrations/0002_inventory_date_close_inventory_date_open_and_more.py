# Generated by Django 4.1.4 on 2023-01-20 17:44

import Core.fields.Chars.FirstName
import Core.fields.Chars.Key
import Core.fields.Chars.LastName
import Core.fields.Chars.UserName
import Core.fields.Chars.Value
import Core.fields.DateTimes.DateClose
import Core.fields.DateTimes.DateFrom
import Core.fields.DateTimes.DateOpen
import Core.fields.DateTimes.DateTo
import Core.fields.Decimals.PriceDollar
import Core.fields.Decimals.TotalPrice
import Core.fields.Emails.Email
import Core.fields.ForeignKeys.CartItemForeignKey
import Core.fields.ForeignKeys.DiscountForeignKey
import Core.fields.ForeignKeys.InventoryForeignKey
import Core.fields.ForeignKeys.InventoryItemForeignKey
import Core.fields.ForeignKeys.MarketForeignKey
import Core.fields.ForeignKeys.OrderForeignKey
import Core.fields.ForeignKeys.OrderItemForeignKey
import Core.fields.ForeignKeys.OrderMarketForeignKey
import Core.fields.ForeignKeys.ProductForeignKey
import Core.fields.ForeignKeys.PropertyForeignKey
import Core.fields.ForeignKeys.ShipmentForeignKey
import Core.fields.ForeignKeys.UserForeignKey
import Core.fields.ManyToManys.InventoryItemManyToMany
import Core.fields.ManyToManys.PropertyManyToMany
import Core.fields.MultiSelects.WeekDays
import Core.fields.PositiveIntegers.StatusOrder
import Core.fields.PositiveIntegers.StatusPayment
import Core.fields.Slugs.Slug
import Core.fields.Texts.Bio
import Core.fields.Times.TimeClose
import Core.fields.Times.TimeFrom
import Core.fields.Times.TimeOpen
import Core.fields.Times.TimeTo
from django.conf import settings
import django.core.validators
from django.db import migrations
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('Products', '0002_initial'),
        ('Customers', '0005_remove_ordercustomer_couponcustomercoupon_and_more'),
        ('Shops', '0001_initial'),
        ('Markets', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='inventory',
            name='date_close',
            field=Core.fields.DateTimes.DateClose.DateClose(blank=True, help_text='DateClose of this Inventory record', null=True, verbose_name='Inventory`s DateClose'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='date_open',
            field=Core.fields.DateTimes.DateOpen.DateOpen(blank=True, help_text='DateOpen of this Inventory record', null=True, verbose_name='Inventory`s DateOpen'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='inventory_item',
            field=Core.fields.ForeignKeys.InventoryItemForeignKey.InventoryItemForeignKey(blank=True, help_text='InventoryItem of this Inventory record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inventorys', to='Markets.inventoryitem', verbose_name='Inventory`s InventoryItem'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='market',
            field=Core.fields.ForeignKeys.MarketForeignKey.MarketForeignKey(blank=True, help_text='Market of this Inventory record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inventorys', to='Markets.market', verbose_name='Inventory`s Market'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='time_close',
            field=Core.fields.Times.TimeClose.TimeClose(blank=True, help_text='TimeClose of this Inventory record', null=True, verbose_name='Inventory`s TimeClose'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='time_open',
            field=Core.fields.Times.TimeOpen.TimeOpen(blank=True, help_text='TimeOpen of this Inventory record', null=True, verbose_name='Inventory`s TimeOpen'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='weekdays',
            field=Core.fields.MultiSelects.WeekDays.WeekDays(blank='True', choices=[(0, 'Saturday'), (1, 'Sunday'), (2, 'Monday'), (3, 'Tuesday'), (4, 'Wednesday'), (5, 'Thursday'), (6, 'Friday')], db_index=True, default=[], help_text='WeekDays of this Inventory record', max_length=7, null='True', verbose_name='Inventory`s WeekDays'),
            preserve_default='True',
        ),
        migrations.AddField(
            model_name='inventoryitem',
            name='cart_item',
            field=Core.fields.ForeignKeys.CartItemForeignKey.CartItemForeignKey(blank=True, help_text='Inventory of this Item record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inventoryitems', to='Customers.cartitem', verbose_name='Item`s Inventory'),
        ),
        migrations.AddField(
            model_name='inventoryitem',
            name='date_from',
            field=Core.fields.DateTimes.DateFrom.DateFrom(blank=True, help_text='Inventory of this Item record', null=True, verbose_name='Item`s Inventory'),
        ),
        migrations.AddField(
            model_name='inventoryitem',
            name='date_to',
            field=Core.fields.DateTimes.DateTo.DateTo(blank=True, help_text='Inventory of this Item record', null=True, verbose_name='Item`s Inventory'),
        ),
        migrations.AddField(
            model_name='inventoryitem',
            name='discount',
            field=Core.fields.ForeignKeys.DiscountForeignKey.DiscountForeignKey(blank=True, help_text='Inventory of this Item record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inventoryitems', to='Shops.discount', verbose_name='Item`s Inventory'),
        ),
        migrations.AddField(
            model_name='inventoryitem',
            name='inventory',
            field=Core.fields.ForeignKeys.InventoryForeignKey.InventoryForeignKey(blank=True, help_text='Inventory of this Item record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inventoryitems', to='Markets.inventory', verbose_name='Item`s Inventory'),
        ),
        migrations.AddField(
            model_name='inventoryitem',
            name='order_item',
            field=Core.fields.ForeignKeys.OrderItemForeignKey.OrderItemForeignKey(blank=True, help_text='Inventory of this Item record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inventoryitems', to='Shops.orderitem', verbose_name='Item`s Inventory'),
        ),
        migrations.AddField(
            model_name='inventoryitem',
            name='price',
            field=Core.fields.Decimals.PriceDollar.PriceDollar(db_index=True, decimal_places=2, default=0.0, help_text='Inventory of this Item record', max_digits=10, verbose_name='Item`s Inventory'),
        ),
        migrations.AddField(
            model_name='inventoryitem',
            name='product',
            field=Core.fields.ForeignKeys.ProductForeignKey.ProductForeignKey(blank=True, help_text='Inventory of this Item record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inventoryitems', to='Products.product', verbose_name='Item`s Inventory'),
        ),
        migrations.AddField(
            model_name='inventoryitem',
            name='property',
            field=Core.fields.ManyToManys.PropertyManyToMany.PropertyManyToMany(blank=True, db_index=True, help_text='Inventory of this Item record', related_name='inventoryitems', through='Markets.Inventoryitemproperty', to='Markets.property', verbose_name='Item`s Inventory'),
        ),
        migrations.AddField(
            model_name='inventoryitem',
            name='time_from',
            field=Core.fields.Times.TimeFrom.TimeFrom(blank=True, help_text='Inventory of this Item record', null=True, verbose_name='Item`s Inventory'),
        ),
        migrations.AddField(
            model_name='inventoryitem',
            name='time_to',
            field=Core.fields.Times.TimeTo.TimeTo(blank=True, help_text='Inventory of this Item record', null=True, verbose_name='Item`s Inventory'),
        ),
        migrations.AddField(
            model_name='inventoryitem',
            name='weekdays',
            field=Core.fields.MultiSelects.WeekDays.WeekDays(blank='True', choices=[(0, 'Saturday'), (1, 'Sunday'), (2, 'Monday'), (3, 'Tuesday'), (4, 'Wednesday'), (5, 'Thursday'), (6, 'Friday')], db_index=True, default=[], help_text='Inventory of this Item record', max_length=7, null='True', verbose_name='Item`s Inventory'),
            preserve_default='True',
        ),
        migrations.AddField(
            model_name='inventoryitemproperty',
            name='inventoryitem_id',
            field=Core.fields.ForeignKeys.InventoryItemForeignKey.InventoryItemForeignKey(blank=True, help_text='InventoryItem of this Inventoryitemproperty record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inventoryitempropertys', to='Markets.inventoryitem', verbose_name='Inventoryitemproperty`s InventoryItem'),
        ),
        migrations.AddField(
            model_name='inventoryitemproperty',
            name='property_id',
            field=Core.fields.ForeignKeys.PropertyForeignKey.PropertyForeignKey(blank=True, help_text='Property of this Inventoryitemproperty record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inventoryitempropertys', to='Markets.property', verbose_name='Inventoryitemproperty`s Property'),
        ),
        migrations.AddField(
            model_name='market',
            name='bio',
            field=Core.fields.Texts.Bio.Bio(blank=True, default='My Bio', help_text='BioField of this Market record', max_length=1000, null=True, verbose_name='Market`s BioField'),
        ),
        migrations.AddField(
            model_name='market',
            name='email',
            field=Core.fields.Emails.Email.Email(blank=True, help_text='Emails of this Market record', max_length=254, null=True, validators=[django.core.validators.RegexValidator(message='Must be an email)', regex="^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$")], verbose_name='Market`s Emails'),
        ),
        migrations.AddField(
            model_name='market',
            name='firstname',
            field=Core.fields.Chars.FirstName.FirstName(blank=True, help_text='Firstname of this Market record', max_length=30, null=True, validators=[django.core.validators.RegexValidator(message='must be a valid name with 3 to 30 characters', regex='^.{3,30}$')], verbose_name='Market`s Firstname'),
        ),
        migrations.AddField(
            model_name='market',
            name='inventory',
            field=Core.fields.ForeignKeys.InventoryForeignKey.InventoryForeignKey(blank=True, help_text='Inventory of this Market record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='markets', to='Markets.inventory', verbose_name='Market`s Inventory'),
        ),
        migrations.AddField(
            model_name='market',
            name='lastname',
            field=Core.fields.Chars.LastName.LastName(blank=True, help_text='Lastname of this Market record', max_length=30, null=True, validators=[django.core.validators.RegexValidator(message='must be a valid name with 3 to 30 characters', regex='^.{3,30}$')], verbose_name='Market`s Lastname'),
        ),
        migrations.AddField(
            model_name='market',
            name='order_market',
            field=Core.fields.ForeignKeys.OrderMarketForeignKey.OrderMarketForeignKey(blank=True, help_text='OrderMarket of this Market record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='markets', to='Markets.ordermarket', verbose_name='Market`s OrderMarket'),
        ),
        migrations.AddField(
            model_name='market',
            name='slug',
            field=Core.fields.Slugs.Slug.Slug(blank=True, help_text='Slugs of this Market record', max_length=100, null=True, unique=True, verbose_name='Market`s Slugs'),
        ),
        migrations.AddField(
            model_name='market',
            name='user',
            field=Core.fields.ForeignKeys.UserForeignKey.UserForeignKey(blank=True, help_text='User of this Market record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='markets', to=settings.AUTH_USER_MODEL, verbose_name='Market`s User'),
        ),
        migrations.AddField(
            model_name='market',
            name='user_name',
            field=Core.fields.Chars.UserName.UserName(blank=True, help_text='UserName of this Market record', max_length=30, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='Must be a valid username)', regex='^(?=.{4,32}$)(?![_.-])(?!.*[_.]{2})[a-zA-Z0-9._-]+(?<![_.])$')], verbose_name='Market`s UserName'),
        ),
        migrations.AddField(
            model_name='ordermarket',
            name='market',
            field=Core.fields.ForeignKeys.MarketForeignKey.MarketForeignKey(blank=True, help_text='Market of this Ordermarket record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ordermarkets', to='Markets.market', verbose_name='Ordermarket`s Market'),
        ),
        migrations.AddField(
            model_name='ordermarket',
            name='order',
            field=Core.fields.ForeignKeys.OrderForeignKey.OrderForeignKey(blank=True, help_text='Order of this Ordermarket record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ordermarkets', to='Shops.order', verbose_name='Ordermarket`s Order'),
        ),
        migrations.AddField(
            model_name='ordermarket',
            name='order_item',
            field=Core.fields.ForeignKeys.OrderItemForeignKey.OrderItemForeignKey(blank=True, help_text='OrderItem of this Ordermarket record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ordermarkets', to='Shops.orderitem', verbose_name='Ordermarket`s OrderItem'),
        ),
        migrations.AddField(
            model_name='ordermarket',
            name='shipment',
            field=Core.fields.ForeignKeys.ShipmentForeignKey.ShipmentForeignKey(blank=True, help_text='Shipment of this Ordermarket record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ordermarkets', to='Shops.shipment', verbose_name='Ordermarket`s Shipment'),
        ),
        migrations.AddField(
            model_name='ordermarket',
            name='status_order',
            field=Core.fields.PositiveIntegers.StatusOrder.StatusOrder(choices=[(0, 'Pending'), (1, 'Cancel'), (2, 'Done')], db_index=True, default=0, help_text='StatusOrder of this Ordermarket record', validators=[django.core.validators.MinValueValidator(0, message='Status order must be at least 0'), django.core.validators.MaxValueValidator(2, message='Status order must be at most 2')], verbose_name='Ordermarket`s StatusOrder'),
        ),
        migrations.AddField(
            model_name='ordermarket',
            name='status_payment',
            field=Core.fields.PositiveIntegers.StatusPayment.StatusPayment(choices=[(0, 'Pending'), (1, 'Cancel'), (2, 'Paid')], db_index=True, default=0, help_text='StatusPayment of this Ordermarket record', validators=[django.core.validators.MinValueValidator(0, message='Status payment must be at least 0'), django.core.validators.MaxValueValidator(2, message='Status payment must be at most 2')], verbose_name='Ordermarket`s StatusPayment'),
        ),
        migrations.AddField(
            model_name='ordermarket',
            name='total_price',
            field=Core.fields.Decimals.TotalPrice.TotalPrice(db_index=True, decimal_places=2, default=0.0, help_text='TotalPrice of this Ordermarket record', max_digits=10, verbose_name='Ordermarket`s TotalPrice'),
        ),
        migrations.AddField(
            model_name='property',
            name='inventory_item',
            field=Core.fields.ManyToManys.InventoryItemManyToMany.InventoryItemManyToMany(blank=True, db_index=True, help_text='InventoryItem of this Property record', related_name='propertys', through='Markets.Inventoryitemproperty', to='Markets.inventoryitem', verbose_name='Property`s InventoryItem'),
        ),
        migrations.AddField(
            model_name='property',
            name='key',
            field=Core.fields.Chars.Key.Key(blank=True, help_text='Key of this Property record', max_length=30, null=True, verbose_name='Property`s Key'),
        ),
        migrations.AddField(
            model_name='property',
            name='value',
            field=Core.fields.Chars.Value.Value(blank=True, help_text='Value of this Property record', max_length=30, null=True, verbose_name='Property`s Value'),
        ),
    ]
